---
# tasks file for config-ec2
- include_vars: "{{ playbook_dir }}/environments/vars_common.yaml"                    # common vars same in all environments
- include_vars: "{{ playbook_dir }}/environments/{{ deployment_env }}/vars-app.yaml"   # variables specific to guardian grrf

- include_vars:
    file: "{{ role_path }}/../../environments/{{ deployment_env }}/ec2_info.json"
    name: ec2_info

- name: ec2 configuration block
  become_user: root
  become: yes
  become_method: sudo
  block:

  # - name: upgrade all packages
  #   yum:
  #     name: '*'
  #     state: latest
  #   ignore_errors: yes

  # - name: install git, mc, amazon-efs-utils, sshfs, nano, NetworkManager, bind-utils
  #   yum:
  #     name: mc
  #     state: present

  - name: login to aws ecr
    shell: aws ecr get-login-password --region {{aws_region}} | docker login --username AWS --password-stdin {{aws_account}}.dkr.ecr.{{aws_region}}.amazonaws.com

  - name: remove docker container if already running
    shell: docker rm --force $(docker ps -a -q)
    ignore_errors: yes

    # this should not run if the aite ialready up
  - name:  start GRRF container
    # shell: docker run -itd --name guardian-grrf --restart always -p 80:8888 guardiandev/grrf:latest
    # shell: docker run -itd --name guardian-grrf -p 80:8888 --rm guardiandev/grrf:latest
    shell: docker run -itd --name guardian-grrf -p 80:8888 --rm {{ ecr_repository_uri }}:{{ container_version }}

  # - name: show the address of the application
  #   ansible.builtin.debug:
  #     msg: "Guardian GRRF app should be running at: http://{{ item.public_dns_name }}"
  #   with_items: "{{ec2_info.instances}}"


# block end
######################################################################################